#include <WiFi.h>
#include <FirebaseESP32.h>
#include <NewPing.h>
#include <time.h>

const char* ssid = "";//Add SSID
const char* password = "";//ADD using hotspot password

FirebaseConfig config;
FirebaseAuth auth;
FirebaseData firebaseData;

#define TRIG_PIN 16
#define ECHO_PIN 17
#define MAX_DISTANCE_CM 200
const float PIPE_HEIGHT_CM = 28.0;
NewPing sonar(TRIG_PIN, ECHO_PIN, MAX_DISTANCE_CM);

const char* ntpServer = "pool.ntp.org";
const long gmtOffset_sec = 19800;
const int daylightOffset_sec = 0;

void waitForTimeSync() {
  struct tm timeinfo;
  int retries = 0;
  while (!getLocalTime(&timeinfo) && retries < 10) {
    Serial.println("Waiting for NTP time sync...");
    delay(1000);
    retries++;
  }
  if (retries >= 10) {
    Serial.println("Time sync failed!");
  } else {
    Serial.println("Time synced successfully.");
  }
}

void setup() {
  Serial.begin(115200);

  Serial.print("Connecting to WiFi");
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected");

  configTime(gmtOffset_sec, daylightOffset_sec, ntpServer);
  waitForTimeSync();

  config.host = "//copy and paste the database url - remove https://"; 
  config.api_key = "//Your Firebase Web API Key";
  auth.user.email = "";
  auth.user.password = "";

  Firebase.begin(&config, &auth);
  Firebase.reconnectWiFi(true);
}

void loop() {
  time_t now = time(nullptr);
  struct tm timeinfo;
  char timestampStr[64];
  char nodeName[64];

  if (!getLocalTime(&timeinfo)) {
    sprintf(timestampStr, "Unsynced_%lu", millis());
    sprintf(nodeName, "WaterLevel_Unsynced_%lu", millis());
  } else {
    strftime(timestampStr, sizeof(timestampStr), "%Y-%m-%d %H:%M:%S", &timeinfo);
    strftime(nodeName, sizeof(nodeName), "WaterLevel_%Y-%m-%d_%H-%M-%S", &timeinfo);
  }

  unsigned int distanceCm = sonar.ping_cm();
  if (distanceCm == 0) distanceCm = MAX_DISTANCE_CM;
  float waterLevelCm = PIPE_HEIGHT_CM - distanceCm;
  if (waterLevelCm < 0) waterLevelCm = 0;
  if (waterLevelCm > PIPE_HEIGHT_CM) waterLevelCm = PIPE_HEIGHT_CM;

  Serial.printf("Timestamp: %s\nDistance: %u cm, Water Level: %.2f cm\n", timestampStr, distanceCm, waterLevelCm);

  String path = "/WaterLevelLogs/" + String(nodeName);
  FirebaseJson json;
  json.set("timestamp", timestampStr);
  json.set("distanceCm", distanceCm);
  json.set("waterLevelCm", waterLevelCm);

  if (Firebase.setJSON(firebaseData, path, json)) {
    Serial.println("Data pushed successfully");
  } else {
    Serial.print("Firebase push failed: ");
    Serial.println(firebaseData.errorReason());
  }

  delay(120000);
}
